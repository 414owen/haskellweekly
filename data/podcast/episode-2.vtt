WEBVTT

1
00:00:02.050 --> 00:00:04.190
Hi, welcome to the Haskell Weekly podcast.

2
00:00:04.190 --> 00:00:07.740
This is a show about Haskell,
a purely functional programming language.

3
00:00:07.740 --> 00:00:12.269
I am your guest, Sara Lichtenstein,
and I'm an engineer at ITProTV.

4
00:00:12.269 --> 00:00:14.170
And this your host, Taylor Fausak.

5
00:00:14.170 --> 00:00:16.280
>> Hi, I'm the lead developer at ITProTV.

6
00:00:17.480 --> 00:00:19.820
Today, we're going to
be talking about Elm.

7
00:00:19.820 --> 00:00:25.745
In particular, upgrading Elm from 0.18 to
0.19 which we recently did here at ITPro.

8
00:00:25.745 --> 00:00:28.767
Sara was a big part of
that upgrade process, and

9
00:00:28.767 --> 00:00:30.741
she wrote a blog post about it.

10
00:00:30.741 --> 00:00:34.010
And so we're gonna be kinda digging into
that blog post and talking more about it.

11
00:00:35.205 --> 00:00:37.790
Sara, do you wanna tell
us a little about Elm and

12
00:00:37.790 --> 00:00:39.550
get us started on the upgrade path?

13
00:00:39.550 --> 00:00:42.690
>> Absolutely, so
here at ITProTV, as you know,

14
00:00:42.690 --> 00:00:45.430
as our lead engineer,
we use a lot of Haskell.

15
00:00:45.430 --> 00:00:49.550
And luckily hand-in-hand with that goes
Elm, since it's written in Haskell.

16
00:00:49.550 --> 00:00:52.140
So we use Elm for our front-end,
as I'm sure you're aware.

17
00:00:53.160 --> 00:00:57.313
And we had quite an interesting
time upgrading from 0.18 to 0.19.

18
00:00:57.313 --> 00:00:59.350
There was a couple things
that didn't go great.

19
00:00:59.350 --> 00:01:04.360
But overall we've really enjoyed
the upgrade and using the upgrade.

20
00:01:04.360 --> 00:01:05.812
>> And using Elm altogether.

21
00:01:05.812 --> 00:01:06.930
>> Absolutely.
>> It's been great.

22
00:01:06.930 --> 00:01:07.580
>> Yes.

23
00:01:07.580 --> 00:01:11.110
>> Yeah, this upgrade didn't really
make us want to ditch Elm entirely.

24
00:01:11.110 --> 00:01:13.210
We're still very much into Elm.

25
00:01:13.210 --> 00:01:15.756
But what are some of the things that
didn't go well with the upgrade?

26
00:01:15.756 --> 00:01:20.588
>> So what we noticed were there
was a couple breaking changes, for

27
00:01:20.588 --> 00:01:24.920
example, the change from
the core date into time POSIX.

28
00:01:24.920 --> 00:01:26.930
It didn't really have
the same functionality and

29
00:01:26.930 --> 00:01:30.670
it's not in core anymore,
which is kind of a lot.

30
00:01:30.670 --> 00:01:31.232
>> That's weird.

31
00:01:31.232 --> 00:01:33.320
>> Yeah.
>> If it's not in core, where did it go?

32
00:01:33.320 --> 00:01:36.991
>> It went to a library
called time from Elm, so

33
00:01:36.991 --> 00:01:42.267
it's not in the Elm core part,
but it's in a time of it's own.

34
00:01:42.267 --> 00:01:44.180
>> [LAUGH]
>> Ha ha.

35
00:01:44.180 --> 00:01:46.260
>> A land before time, maybe.

36
00:01:46.260 --> 00:01:49.015
They've moved it off into
their own official Elm-

37
00:01:49.015 --> 00:01:49.900
>> Time library.

38
00:01:49.900 --> 00:01:53.250
>> Yeah, okay, so it's still official,
it's just not included by default.

39
00:01:53.250 --> 00:01:54.050
>> Right.

40
00:01:54.050 --> 00:01:54.790
>> Got you.

41
00:01:54.790 --> 00:01:56.915
And they changed a bunch of
stuff when they moved, it right?

42
00:01:56.915 --> 00:01:58.161
>> Mm-hm.
>> So it's a little annoying

43
00:01:58.161 --> 00:01:59.690
they did both of those
things at the same time.

44
00:01:59.690 --> 00:02:02.416
>> Yeah, the functionality is
just totally different and

45
00:02:02.416 --> 00:02:04.910
switching from date to
POSIX is not very seamless.

46
00:02:04.910 --> 00:02:07.695
It's a little bit testy.

47
00:02:07.695 --> 00:02:10.790
>> [LAUGH] Testy, that's a good word.

48
00:02:10.790 --> 00:02:12.639
We wrote a lot of tests around this,
didn't we?

49
00:02:12.639 --> 00:02:13.372
>> Yes, we did.

50
00:02:13.372 --> 00:02:13.872
>> [LAUGH] Okay.

51
00:02:14.970 --> 00:02:17.540
>> Actually, the only tests in
our database are about time, so.

52
00:02:17.540 --> 00:02:19.350
>> Yeah [LAUGH].

53
00:02:19.350 --> 00:02:21.214
You gotta be sure that you get time right,
I mean.

54
00:02:21.214 --> 00:02:22.130
>> Mm-hm.
It's pretty important.

55
00:02:22.130 --> 00:02:22.870
>> Yeah.

56
00:02:22.870 --> 00:02:24.760
>> This weird construct
that we've created.

57
00:02:24.760 --> 00:02:26.045
It's pretty important to get it right.

58
00:02:26.045 --> 00:02:28.342
>> [LAUGH]
>> Very true, so

59
00:02:28.342 --> 00:02:32.158
fortunately we were able to
get time right and move on.

60
00:02:32.158 --> 00:02:34.180
But there were still some other
things that didn't go well.

61
00:02:34.180 --> 00:02:34.872
What were they?

62
00:02:34.872 --> 00:02:38.147
>> Well with the rest of our breaking
changes, we had some issues with

63
00:02:38.147 --> 00:02:41.540
the navigation since now you have
to have this key concept in.

64
00:02:41.540 --> 00:02:42.920
>> And what's that key concept?

65
00:02:42.920 --> 00:02:47.350
>> So you pass a key in
your navigation through, so

66
00:02:47.350 --> 00:02:50.560
instead of using, I think it's browser.

67
00:02:50.560 --> 00:02:51.790
>> Yeah,
I think that's what it was before.

68
00:02:51.790 --> 00:02:53.130
>> Yeah, I think was browser before.

69
00:02:53.130 --> 00:02:55.630
So instead of using that,
you have to pass this key along.

70
00:02:55.630 --> 00:02:58.480
Which is kind of helpful,
actually, once you get down to it.

71
00:02:58.480 --> 00:03:01.380
But making that change was
a little bit more difficult

72
00:03:01.380 --> 00:03:04.890
because it's a different
concept than using browser was.

73
00:03:04.890 --> 00:03:08.290
>> Right, so instead of saying,
go to this particular URL or

74
00:03:08.290 --> 00:03:12.110
this particular route,
you have to pass along a key that says.

75
00:03:12.110 --> 00:03:13.830
I don't know, what does it say?

76
00:03:13.830 --> 00:03:15.312
>> Like this is your route, I guess?

77
00:03:15.312 --> 00:03:16.848
>> Okay.

78
00:03:16.848 --> 00:03:21.542
>> But it makes more sense in my mind to
pass it around for the URL changes and

79
00:03:21.542 --> 00:03:23.930
how to link it back and forth.

80
00:03:23.930 --> 00:03:26.570
But making that change was
still a little bit difficult.

81
00:03:26.570 --> 00:03:27.389
>> Got you.
>> So-

82
00:03:27.389 --> 00:03:28.611
>> So you like where we ended up but

83
00:03:28.611 --> 00:03:29.840
the path was maybe not so nice.

84
00:03:29.840 --> 00:03:31.099
>> Yeah, exactly.

85
00:03:31.099 --> 00:03:36.400
We had some changes with the HTTP library
as well, which again were great changes.

86
00:03:36.400 --> 00:03:41.232
But the package felt like it had more
breaking changes than any other package

87
00:03:41.232 --> 00:03:43.810
for us, which was obviously not great.

88
00:03:43.810 --> 00:03:45.040
No one likes a breaking change.

89
00:03:45.040 --> 00:03:46.940
>> Yeah and we do a lot of HTTP calls.

90
00:03:46.940 --> 00:03:49.190
So maybe it's not so surprising,
but it's still annoying.

91
00:03:49.190 --> 00:03:50.780
>> Mm-hm, exactly.

92
00:03:50.780 --> 00:03:55.590
And then, just some function signature
changes that didn't quite make sense and

93
00:03:55.590 --> 00:03:58.220
maybe could have come along with an
explanation that would have made them make

94
00:03:58.220 --> 00:03:59.330
more sense to us.

95
00:03:59.330 --> 00:04:00.010
>> Yeah.

96
00:04:00.010 --> 00:04:00.590
>> So.

97
00:04:00.590 --> 00:04:02.070
>> Yeah, it's kind of frustrating.

98
00:04:02.070 --> 00:04:05.078
I don't remember the scope of these
changes, but it's on the order of,

99
00:04:05.078 --> 00:04:07.460
the arguments change positions or
something like that.

100
00:04:07.460 --> 00:04:08.445
>> Yeah.
>> Well sure,

101
00:04:08.445 --> 00:04:11.610
I could see how it might be better but
is it really worth it?

102
00:04:11.610 --> 00:04:14.800
>> Yeah, it would have been better if
that had come with an explanation as to

103
00:04:14.800 --> 00:04:16.970
why it was changed and
what was the purpose.

104
00:04:16.970 --> 00:04:19.730
Versus just making the change and
not really saying anything about it.

105
00:04:19.730 --> 00:04:23.990
>> Yeah, well, I don't want to keep
harping on these breaking changes.

106
00:04:23.990 --> 00:04:26.220
I know other stuff was
involved in the upgrade.

107
00:04:26.220 --> 00:04:27.850
So what else went wrong?

108
00:04:27.850 --> 00:04:30.710
>> So with all the breaking
changes came a broken compiler.

109
00:04:30.710 --> 00:04:35.456
Which obviously, being familiar with
using Haskell and its great compiler, and

110
00:04:35.456 --> 00:04:38.430
Elm and its even better compiler.

111
00:04:38.430 --> 00:04:39.819
Cuz it's so friendly and nice.

112
00:04:39.819 --> 00:04:41.870
>> [LAUGH]
>> And great with the errors.

113
00:04:41.870 --> 00:04:45.390
Not having a compiler made it
very difficult to figure out

114
00:04:45.390 --> 00:04:47.800
what exactly was going wrong and
how to fix it.

115
00:04:47.800 --> 00:04:49.781
>> Yeah, and when you say broken compiler,

116
00:04:49.781 --> 00:04:52.505
you don't mean that the Elm
compiler itself was broken.

117
00:04:52.505 --> 00:04:55.580
You mean that it didn't work with
our project for a little while?

118
00:04:55.580 --> 00:04:59.546
>> Right, when you're upgrading, you have
to upgrade the compiler simultaneously,

119
00:04:59.546 --> 00:05:01.264
which makes it a lot more difficult.

120
00:05:01.264 --> 00:05:05.972
Because if the compiler doesn't
work with what you're using,

121
00:05:05.972 --> 00:05:08.420
I don't know how to phrase this.

122
00:05:08.420 --> 00:05:11.940
>> Yeah so, as part of the upgrade,
they changed some syntax.

123
00:05:11.940 --> 00:05:12.630
>> Yeah.
>> And

124
00:05:12.630 --> 00:05:16.000
we couldn't write something that
worked both with the old compiler and

125
00:05:16.000 --> 00:05:17.030
the new compiler.

126
00:05:17.030 --> 00:05:18.400
>> Yep, yep.

127
00:05:18.400 --> 00:05:20.100
>> So,
>> Those are the words I was looking for.

128
00:05:20.100 --> 00:05:24.233
>> When we upgraded, Elm 19 just said,
nope, I can't deal with this file.

129
00:05:24.233 --> 00:05:27.324
And that's a lot less useful than it
saying, the problem is right here,

130
00:05:27.324 --> 00:05:29.011
like it normally does with the errors.

131
00:05:29.011 --> 00:05:31.027
It points it straight to it and
it even says, hey,

132
00:05:31.027 --> 00:05:33.003
maybe this is the solution
you're looking for.

133
00:05:33.003 --> 00:05:34.616
>> So politely, is this what you meant?

134
00:05:34.616 --> 00:05:35.836
>> [LAUGH] Yeah,
it's a very nice compiler.

135
00:05:35.836 --> 00:05:37.040
>> Yes, Elm, thank you.

136
00:05:37.040 --> 00:05:39.308
>> [LAUGH] Why can't it just
make the changes for us?

137
00:05:39.308 --> 00:05:40.892
>> I know, that'd be too easy.

138
00:05:40.892 --> 00:05:43.211
>> That maybe will be in Elm 20,
who knows?

139
00:05:43.211 --> 00:05:44.005
>> Evan are you listening?

140
00:05:44.005 --> 00:05:46.994
>> [LAUGH]
>> Elm 20.

141
00:05:46.994 --> 00:05:49.830
>> So some of these problems sound
like they would have been solved or

142
00:05:49.830 --> 00:05:52.359
at least made a little better
with better documentation or

143
00:05:52.359 --> 00:05:53.870
explanation around the changes.

144
00:05:53.870 --> 00:05:56.590
But I know we had problems
with the documentation itself.

145
00:05:56.590 --> 00:05:57.820
Can you talk a little about that?

146
00:05:57.820 --> 00:06:01.820
>> Yeah, so that's another big
issue is that once Elm 19 came out,

147
00:06:01.820 --> 00:06:03.785
that 18 documentation just went away.

148
00:06:03.785 --> 00:06:06.196
>> [LAUGH]
>> That's not great.

149
00:06:06.196 --> 00:06:10.201
Luckily, we were able to find it, but
it took a lot of Internet digging,

150
00:06:10.201 --> 00:06:13.928
which good thing we're engineers
familiar with the Internet.

151
00:06:13.928 --> 00:06:15.545
>> That's 90% of our job.

152
00:06:15.545 --> 00:06:17.940
>> Yeah,
we were able to find it eventually.

153
00:06:17.940 --> 00:06:21.566
It currently lives on this GitHub page
which, hopefully it'll stay there so

154
00:06:21.566 --> 00:06:23.479
that there's some sort of record of it.

155
00:06:23.479 --> 00:06:27.744
But it would be really nice if on the Elm
website where the packages actually is,

156
00:06:27.744 --> 00:06:30.429
it let you go back and
forth between the packages.

157
00:06:30.429 --> 00:06:32.508
So you could see,
>> The old one.

158
00:06:32.508 --> 00:06:35.393
>> This is what was in 18,
this is what's in 19,

159
00:06:35.393 --> 00:06:37.950
this is what's in
whatever the next one is.

160
00:06:37.950 --> 00:06:40.810
>> Yeah, the one that's coming up
to be prepared for the change.

161
00:06:40.810 --> 00:06:41.670
>> Yeah, absolutely.

162
00:06:41.670 --> 00:06:45.390
>> And you mentioned that this
old documentation was hosted on

163
00:06:45.390 --> 00:06:46.820
some GitHub page.

164
00:06:46.820 --> 00:06:47.890
It's not an official thing?

165
00:06:49.320 --> 00:06:50.030
>> Is it an official thing?

166
00:06:50.030 --> 00:06:51.165
>> I don't know.
>> I don't think so.

167
00:06:51.165 --> 00:06:53.540
>> [LAUGH]
>> I don't remember where it lives.

168
00:06:53.540 --> 00:06:56.960
>> I just remember one of the other
engineers was like, this is where it is.

169
00:06:56.960 --> 00:06:59.450
And I was like, well great,
I'm glad it's somewhere.

170
00:06:59.450 --> 00:07:01.434
>> Gotta bookmark that,
because I'll be coming back to it a lot.

171
00:07:01.434 --> 00:07:03.302
>> Yep.

172
00:07:03.302 --> 00:07:07.536
>> Yeah, it would be nice if it was
an official thing because then you could

173
00:07:07.536 --> 00:07:09.410
count on it sticking around.

174
00:07:09.410 --> 00:07:12.870
But if it's just something that
some enthusiast put together,

175
00:07:12.870 --> 00:07:14.610
maybe he'll get tired of it and
it'll go away.

176
00:07:14.610 --> 00:07:15.320
>> Exactly.

177
00:07:15.320 --> 00:07:17.330
>> Fortunately,
we're done with the upgrade now.

178
00:07:17.330 --> 00:07:20.690
But I'm sure people still haven't
upgraded and it would be nice for

179
00:07:20.690 --> 00:07:22.070
them to use that same resource.

180
00:07:22.070 --> 00:07:25.970
>> Yeah, we were pretty late to the game
cuz I think it came out last August.

181
00:07:25.970 --> 00:07:26.491
>> Yeah.

182
00:07:26.491 --> 00:07:29.070
>> And we didn't do ours until what,
February?

183
00:07:29.070 --> 00:07:30.740
>> Yeah, we waited quite a while.

184
00:07:30.740 --> 00:07:31.744
>> Yeah.

185
00:07:31.744 --> 00:07:33.530
>> And one of the reasons we waited was so

186
00:07:33.530 --> 00:07:37.420
that the packages in the ecosystem
would have an opportunity to upgrade.

187
00:07:37.420 --> 00:07:40.040
But I remember being kinda surprised
because some of them weren't

188
00:07:40.040 --> 00:07:41.140
upgraded, right?

189
00:07:41.140 --> 00:07:42.020
Didn't we run into that?

190
00:07:42.020 --> 00:07:43.640
>> I think so, yeah.

191
00:07:43.640 --> 00:07:47.150
Yeah, cuz some of the community
packages were just no longer supported.

192
00:07:47.150 --> 00:07:49.690
>> Yeah, they're like, sorry, they
don't support dates anymore, good luck.

193
00:07:49.690 --> 00:07:53.281
>> Okay, which is absurd cuz we
specifically chose those packages for

194
00:07:53.281 --> 00:07:55.300
like, Elm Community supports this.

195
00:07:55.300 --> 00:07:56.853
They're totally gonna keep
this in the next one.

196
00:07:56.853 --> 00:07:57.813
>> [LAUGH]
>> And then it was just like,

197
00:07:57.813 --> 00:07:58.549
>> Psych.

198
00:07:58.549 --> 00:07:59.157
>> Where'd it go?

199
00:07:59.157 --> 00:08:00.813
[LAUGH]
>> Yeah.

200
00:08:00.813 --> 00:08:02.980
>> So.
>> It feels kinda like we got bait and

201
00:08:02.980 --> 00:08:03.635
switched.

202
00:08:03.635 --> 00:08:06.249
>> Little bit.
>> They're like use the community packages

203
00:08:06.249 --> 00:08:08.390
cuz they're not entirely official, but

204
00:08:08.390 --> 00:08:12.440
more official than depending on some
random GitHub user/their Elm package.

205
00:08:12.440 --> 00:08:14.107
>> And then they just became nonexistent.

206
00:08:14.107 --> 00:08:15.718
>> Yeah, they just went away entirely.

207
00:08:15.718 --> 00:08:18.520
>> For
the GitHub users whose packages we do use,

208
00:08:18.520 --> 00:08:21.800
we use one for Elm Bootstrap and
for Elm Dropdown.

209
00:08:21.800 --> 00:08:26.430
We had to fork those ourselves,
just to update them to 19 to work for us.

210
00:08:26.430 --> 00:08:30.495
>> Yeah, and were we able to contribute
those changes back to them or

211
00:08:30.495 --> 00:08:32.825
are we still relying on our own forks?

212
00:08:32.825 --> 00:08:34.105
>> Just relying on our own forks.

213
00:08:34.105 --> 00:08:38.375
But they work and that's great and
obviously that's something that happens.

214
00:08:38.375 --> 00:08:40.045
If it's not a community-supported package,

215
00:08:40.045 --> 00:08:44.455
you have to kind of be aware that you may
have to fork it and update it on your own.

216
00:08:44.455 --> 00:08:47.597
So it's not a big deal, but
it was still just a small annoyance.

217
00:08:47.597 --> 00:08:50.645
>> Yeah, yeah and

218
00:08:50.645 --> 00:08:55.842
especially annoying because in Elm 19, you
can't depend directly on a fork, right?

219
00:08:55.842 --> 00:08:57.182
>> Right.
>> You have to publish it to the Elm

220
00:08:57.182 --> 00:08:57.939
package thing, so.

221
00:08:57.939 --> 00:08:58.489
>> Yeah.

222
00:08:58.489 --> 00:09:02.550
>> We have these weird packages that
are exactly the same as an existing one.

223
00:09:02.550 --> 00:09:04.990
They just support a little different
version of the Elm compiler.

224
00:09:04.990 --> 00:09:09.023
>> If you need the Elm 19 packages for
Elm Bootstrap or Elm Dropdown,

225
00:09:09.023 --> 00:09:12.221
EdutainmentLIVE/ Elm Bootsrap,
or Elm Dropdown.

226
00:09:12.221 --> 00:09:14.439
>> [LAUGH]
>> Shameless plug for our packages.

227
00:09:14.439 --> 00:09:15.103
>> There we go.

228
00:09:15.103 --> 00:09:16.565
[LAUGH]
>> [LAUGH]

229
00:09:16.565 --> 00:09:17.440
>> Hit us up on our Patreon

230
00:09:17.440 --> 00:09:18.326
page if you want this.

231
00:09:18.326 --> 00:09:19.546
>> [LAUGH]
>> [LAUGH]

232
00:09:19.546 --> 00:09:21.629
>> This is sponsored by stamps.com.

233
00:09:21.629 --> 00:09:23.945
>> [LAUGH]
>> So, we had some small annoyances,

234
00:09:23.945 --> 00:09:27.576
obviously, and we definitely have some
suggestions that we've talked about.

235
00:09:27.576 --> 00:09:31.747
Maybe splitting up the update
to update the compiler first, or

236
00:09:31.747 --> 00:09:34.749
let it be backwards
compatible a little bit.

237
00:09:34.749 --> 00:09:42.050
Maybe have a bridge in between,
like a 18.5, to kind of bridge the gap.

238
00:09:42.050 --> 00:09:45.139
>> Yeah, so that we can do this
upgrade kind of in pieces.

239
00:09:45.139 --> 00:09:47.047
>> Steps.
>> Rather than upgrading all the packages

240
00:09:47.047 --> 00:09:49.080
and the compiler and
everything all at once.

241
00:09:49.080 --> 00:09:52.660
>> Yeah, cuz it was a humongous change
to our code base to upgrade an entire

242
00:09:52.660 --> 00:09:53.830
project, so.

243
00:09:53.830 --> 00:09:54.990
>> Yeah, and as you mentioned,

244
00:09:54.990 --> 00:09:58.000
it was really annoying to
have it broken in the middle.

245
00:09:58.000 --> 00:09:59.150
>> Absolutely.
>> Where you're like, well,

246
00:09:59.150 --> 00:10:02.580
we had it working on 18, and
it was broken for a week.

247
00:10:02.580 --> 00:10:05.060
And then it's working on 19, hopefully.

248
00:10:05.060 --> 00:10:06.120
>> Yeah, maybe.

249
00:10:06.120 --> 00:10:07.326
We'll find out.

250
00:10:07.326 --> 00:10:09.200
>> [LAUGH]
>> Just kidding, it's totally working.

251
00:10:09.200 --> 00:10:12.052
But yeah, obviously those would be
really great changes to make for

252
00:10:12.052 --> 00:10:12.862
the next upgrade.

253
00:10:12.862 --> 00:10:16.560
And maybe making that documentation
super easy to find for

254
00:10:16.560 --> 00:10:20.197
everyone to just have record,
and have that available.

255
00:10:20.197 --> 00:10:20.949
>> Mm-hm.

256
00:10:20.949 --> 00:10:24.915
>> Thoughts,
[LAUGH] keep your documentation available.

257
00:10:24.915 --> 00:10:26.142
[LAUGH]
>> Please.

258
00:10:26.142 --> 00:10:26.652
>> Really important.

259
00:10:26.652 --> 00:10:27.736
>> We actually do use it.

260
00:10:27.736 --> 00:10:29.410
>> We need it.

261
00:10:29.410 --> 00:10:33.300
>> Yeah, it's especially frustrating
because Elm has such good documentation.

262
00:10:33.300 --> 00:10:34.478
>> Absolutely.
>> And then they just blow it all away

263
00:10:34.478 --> 00:10:35.510
when they release a new version.

264
00:10:35.510 --> 00:10:37.580
>> Exactly, which is crazy.

265
00:10:37.580 --> 00:10:40.139
We want to keep it around, please.

266
00:10:40.139 --> 00:10:42.622
>> [LAUGH]
>> Your users want it.

267
00:10:42.622 --> 00:10:44.090
>> Yes, we your users.

268
00:10:44.090 --> 00:10:46.530
>> We, your users,
want your documentation.

269
00:10:46.530 --> 00:10:49.980
>> So I don't want this to be completely
a gripe session about the Elm upgrade.

270
00:10:49.980 --> 00:10:51.990
I think that a lot of it went really well.

271
00:10:51.990 --> 00:10:55.992
And even though we have ideas about things
that we would change in the future.

272
00:10:55.992 --> 00:10:58.346
Let's talk a little about
the things that went well and

273
00:10:58.346 --> 00:10:59.800
the stuff we like about Elm 19.

274
00:10:59.800 --> 00:11:04.220
>> Absolutely, because we really do love
Elm 19 now that it's all upgraded and

275
00:11:04.220 --> 00:11:05.080
it's usable.

276
00:11:05.080 --> 00:11:08.340
And we've doing a lot of stories
in our Elm repository, and

277
00:11:08.340 --> 00:11:10.270
it's been going very well.

278
00:11:10.270 --> 00:11:14.940
There's a lot more Elm-supported packages,
so Elm community became just Elm.

279
00:11:15.960 --> 00:11:19.240
And they have a lot more packages
that they support, like browser,

280
00:11:19.240 --> 00:11:22.480
JSON, SVG, time and URL, which is great.

281
00:11:22.480 --> 00:11:25.990
So hopefully those actually translate
into the next upgrade as well.

282
00:11:25.990 --> 00:11:30.390
>> Yeah, and what makes it so
nice to have those in the Elm namespace?

283
00:11:30.390 --> 00:11:33.400
>> Just having those be supported by
the language itself just makes it,

284
00:11:35.110 --> 00:11:36.410
I lost my words.

285
00:11:36.410 --> 00:11:36.937
>> More reliable.

286
00:11:36.937 --> 00:11:37.456
>> Yeah.

287
00:11:37.456 --> 00:11:39.461
>> [LAUGH]
>> Reliable, yeah.

288
00:11:39.461 --> 00:11:42.445
>> Yeah, and as we noted, we depended
on that Elm Community package and

289
00:11:42.445 --> 00:11:43.068
it went away.

290
00:11:43.068 --> 00:11:46.292
And it seems like maybe they weren't
willing to commit to pull it into like

291
00:11:46.292 --> 00:11:47.333
their core namespace.

292
00:11:47.333 --> 00:11:49.589
But now that these ones
are in the core namespace,

293
00:11:49.589 --> 00:11:52.014
we can be pretty sure that
they're not gonna go away.

294
00:11:52.014 --> 00:11:55.070
Knock on wood, because this is
a gamble we made with Elm Community.

295
00:11:55.070 --> 00:11:56.642
>> Not gonna actually knock on wood.

296
00:11:56.642 --> 00:11:58.848
>> [LAUGH]
>> But yeah, other than that,

297
00:11:58.848 --> 00:12:01.241
they removed the polymorphic
toString function and

298
00:12:01.241 --> 00:12:03.976
replaced it by something like
Int.toString, I believe.

299
00:12:03.976 --> 00:12:09.728
Which is a lot safer, and as we love
type safety, this is a great change.

300
00:12:09.728 --> 00:12:10.823
>> Yeah.
>> Absolutely loving it.

301
00:12:10.823 --> 00:12:13.803
>> So instead of having a function
that takes literally anything and

302
00:12:13.803 --> 00:12:14.948
converts it to a string.

303
00:12:14.948 --> 00:12:18.100
You have to be very specific and say, no
I wanna convert this integer to a string.

304
00:12:18.100 --> 00:12:19.240
>> This is not JavaScript.

305
00:12:19.240 --> 00:12:19.870
>> [LAUGH]
>> So

306
00:12:19.870 --> 00:12:22.610
we are very specific about what
we want to become strings.

307
00:12:22.610 --> 00:12:24.080
>> Thankfully, it is not JavaScript.

308
00:12:24.080 --> 00:12:25.810
>> Bless.
>> [LAUGH]

309
00:12:25.810 --> 00:12:27.924
>> The documentation is actually even

310
00:12:27.924 --> 00:12:29.901
better in 19, which is great.

311
00:12:29.901 --> 00:12:32.745
Their documentation just keeps improving,
just like the language,

312
00:12:32.745 --> 00:12:34.270
which is fantastic.

313
00:12:34.270 --> 00:12:37.321
>> Yeah, and it's really nice to see
Elm have this focus on documentation.

314
00:12:37.321 --> 00:12:41.787
Where it seems like for them the package
isn't complete until it's documented and

315
00:12:41.787 --> 00:12:43.390
documented well.

316
00:12:43.390 --> 00:12:47.099
Versus looking at some Haskell packages,
sometimes you land on their documentation

317
00:12:47.099 --> 00:12:49.166
and it's literally just
the type signatures.

318
00:12:49.166 --> 00:12:50.850
And you think, well great,
this doesn't help at all.

319
00:12:50.850 --> 00:12:51.790
>> What do I do with this?

320
00:12:51.790 --> 00:12:52.653
Yeah.
>> Yeah.

321
00:12:52.653 --> 00:12:55.522
[LAUGH]
>> Yeah, and then the HTTP package,

322
00:12:55.522 --> 00:12:59.759
as we mentioned before,
has changed and it is much better.

323
00:12:59.759 --> 00:13:04.403
So they have functions like
riskyRequest and riskyTask.

324
00:13:04.403 --> 00:13:05.499
>> [LAUGH]
>> RiskyTask.

325
00:13:05.499 --> 00:13:13.330
So you know that you're using
risky security policies.

326
00:13:13.330 --> 00:13:14.492
I have pronunciation.

327
00:13:14.492 --> 00:13:16.529
>> [LAUGH]
>> And the function signatures for

328
00:13:16.529 --> 00:13:18.020
posting get got even better, so.

329
00:13:19.100 --> 00:13:22.252
>> When you're reading the code
that makes an HTTP call,

330
00:13:22.252 --> 00:13:26.159
it's clear when something uses
riskyRequest or riskyTask that you

331
00:13:26.159 --> 00:13:30.428
need to be extra careful and look at
this and understand what it's doing.

332
00:13:30.428 --> 00:13:33.910
Versus before, it would just say request
and you'd really have to dig in to

333
00:13:33.910 --> 00:13:36.550
the details to figure out if
it's doing something weird

334
00:13:36.550 --> 00:13:37.510
>> Yeah, absolutely.

335
00:13:37.510 --> 00:13:39.131
>> Or risky, you might say.

336
00:13:39.131 --> 00:13:40.243
>> [LAUGH] Such risk.

337
00:13:40.243 --> 00:13:43.690
>> Now we're not the only ones that
have gone through this upgrade process.

338
00:13:43.690 --> 00:13:47.308
We were really excited to see on
the Elm subreddit yesterday that

339
00:13:47.308 --> 00:13:50.256
another company posted
their experience report and

340
00:13:50.256 --> 00:13:52.940
mirrored a lot of the same
comments that we had.

341
00:13:52.940 --> 00:13:55.270
So we're not alone in this process.

342
00:13:55.270 --> 00:13:59.520
And I'm hopeful that Evan and the rest
of the Elm community will look at these

343
00:13:59.520 --> 00:14:03.380
posts and think about how the upgrade
process can be better in the future.

344
00:14:03.380 --> 00:14:04.090
>> Yeah, absolutely.

345
00:14:04.090 --> 00:14:06.336
I think it's great that
we're not alone in this and

346
00:14:06.336 --> 00:14:09.011
that other people are experiencing
the same sort of issues.

347
00:14:09.011 --> 00:14:13.380
And other people are as invested as we are
in Elm that they wanna help make it better

348
00:14:13.380 --> 00:14:13.905
as well.

349
00:14:13.905 --> 00:14:16.201
And so
they're making these kinds of postings and

350
00:14:16.201 --> 00:14:19.170
kind of trying to help
contribute to this community.

351
00:14:19.170 --> 00:14:19.790
>> Absolutely.

352
00:14:20.870 --> 00:14:22.670
Sara, any final thoughts?

353
00:14:22.670 --> 00:14:26.148
>> As much as a headache as we've made
this sound, it really wasn't too terrible.

354
00:14:26.148 --> 00:14:29.553
And we've learned so much along the way,
and we're really loving Elm 19.

355
00:14:29.553 --> 00:14:32.897
And I highly recommend to anybody
who's interested in it to definitely

356
00:14:32.897 --> 00:14:34.021
get in there and try it.

357
00:14:34.021 --> 00:14:36.626
It's a really great language and
it's very well documented, and

358
00:14:36.626 --> 00:14:38.725
it's definitely worth your time.

359
00:14:38.725 --> 00:14:41.130
>> Sara, you gave us some
really good information today.

360
00:14:41.130 --> 00:14:42.760
Thanks for being on the show with me.

361
00:14:42.760 --> 00:14:44.190
>> Thank you for having me.

362
00:14:44.190 --> 00:14:47.270
>> And thank you for
listening to the Haskell weekly podcast.

363
00:14:47.270 --> 00:14:48.980
This has been episode two.

364
00:14:48.980 --> 00:14:53.470
If you liked our show, find out more
at our website haskellweekly.news.

365
00:14:53.470 --> 00:14:56.597
Thanks again for listening,
I've been your host, Taylor Fausak, and

366
00:14:56.597 --> 00:14:57.733
we'll see you next week.

367
00:14:57.733 --> 00:14:58.966
[MUSIC]
