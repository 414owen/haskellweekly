WEBVTT

1
00:00:04.140 --> 00:00:07.440
>> Hello

2
00:00:07.440 --> 00:00:10.390
and welcome to the Haskell Weekly podcast. I am your host

3
00:00:10.390 --> 00:00:12.940
today, Cameron Gera. I'm an engineer at

4
00:00:12.940 --> 00:00:15.730
ITProTV. And with me today we have a

5
00:00:15.740 --> 00:00:18.230
coworker of mine and my boss

6
00:00:18.240 --> 00:00:19.650
Taylor. How's it going, man?

7
00:00:20.640 --> 00:00:23.160
>> It's going good. Thanks for having me on the show Cam.

8
00:00:23.740 --> 00:00:26.650
>> Yeah, man, you know, figured you know, we're in a

9
00:00:26.650 --> 00:00:29.360
new year. So happy 2021 everyone.

10
00:00:29.370 --> 00:00:32.260
And you know, we got to take a time to look

11
00:00:32.260 --> 00:00:35.190
back at what we have come from. You know, 2020

12
00:00:35.190 --> 00:00:38.140
was filled with a lot of stuff. You know, we all

13
00:00:38.140 --> 00:00:40.990
transitioned to work from home. We all figured out

14
00:00:40.990 --> 00:00:43.550
how to communicate still without in face

15
00:00:43.550 --> 00:00:46.530
meetings and figured out how to use Zoom, which

16
00:00:46.530 --> 00:00:48.890
some of us are still questionable at. Speaking about myself.

17
00:00:48.890 --> 00:00:51.700
>> Lots of programs we got, zoom, we got teams, we

18
00:00:51.700 --> 00:00:54.470
got discord. We tried a bunch of others.

19
00:00:55.140 --> 00:00:58.050
>> That we did, but

20
00:00:58.060 --> 00:01:00.320
hey, we're making it through, you know, day by

21
00:01:00.320 --> 00:01:02.820
day. And thank you, listeners joining us

22
00:01:02.820 --> 00:01:05.530
today, but yes. So today we're gonna talk about a little bit about

23
00:01:05.530 --> 00:01:08.170
2020 for us and then also,

24
00:01:08.180 --> 00:01:10.870
uh, kind of dive into a post that was written by

25
00:01:10.880 --> 00:01:13.410
Adam Wespiser about

26
00:01:13.420 --> 00:01:16.220
lessons learned from a year of writing. Haskell,

27
00:01:16.230 --> 00:01:19.060
which is a great post, definitely would

28
00:01:19.060 --> 00:01:20.960
encourage you. It's in um,

29
00:01:21.340 --> 00:01:22.220
edition

30
00:01:22.230 --> 00:01:24.460
241?

31
00:01:25.140 --> 00:01:28.000
>> 245? I've lost track of the issue

32
00:01:28.000 --> 00:01:30.670
numbers of Haskell Weekly, which, you know, you think if

33
00:01:30.670 --> 00:01:32.950
anybody knew, I would know. But it's

34
00:01:32.950 --> 00:01:35.660
245. It's the most recent one. So I

35
00:01:35.660 --> 00:01:38.600
guess this is ... Yeah. This is from 245. I mean,

36
00:01:38.600 --> 00:01:40.960
it was easy when I was on issue, like, seven.

37
00:01:40.970 --> 00:01:43.870
But when you're up in the two hundreds, it's been a

38
00:01:43.870 --> 00:01:44.250
while.

39
00:01:44.540 --> 00:01:47.330
>> Yeah, we've got, got a lot. So yeah, go check it out.

40
00:01:47.340 --> 00:01:50.090
Issue 245 of Haskell Weekly.

41
00:01:50.100 --> 00:01:52.640
And This is the 33rd episode

42
00:01:52.650 --> 00:01:55.560
of Haskell Weekly Podcast. So, you know, we're getting up

43
00:01:55.560 --> 00:01:57.660
there. We're gonna start losing count of these as well.

44
00:01:57.670 --> 00:02:00.650
But you know, so today we're gonna talk about

45
00:02:00.650 --> 00:02:03.520
this post by Adam, and he actually gives a

46
00:02:03.520 --> 00:02:06.420
shout out the Haskell weekly so thank you, Adam. We're glad you

47
00:02:06.960 --> 00:02:09.830
enjoy the weekly update of what's

48
00:02:09.830 --> 00:02:12.640
happening in the world of Haskell. Uh, you know, it's definitely

49
00:02:12.640 --> 00:02:15.420
a kind of a sparse field

50
00:02:15.420 --> 00:02:18.160
sometimes. And so we have a place like Haskell

51
00:02:18.160 --> 00:02:20.800
Weekly to go and, you know, read articles about

52
00:02:20.800 --> 00:02:23.680
Haskell and other functional programming languages. It's

53
00:02:23.680 --> 00:02:24.500
kind of nice.

54
00:02:24.510 --> 00:02:26.950
>> Funny you mention that because when I started Haskell

55
00:02:26.950 --> 00:02:29.930
Weekly, I was afraid that some weeks there just

56
00:02:29.930 --> 00:02:32.890
wouldn't be anything or there'd be, like, two links

57
00:02:32.890 --> 00:02:35.820
to publish or something like that. And surprisingly, that has never

58
00:02:35.820 --> 00:02:38.320
been the case. There's never been a shortage of content.

59
00:02:38.330 --> 00:02:40.690
So, uh, just, I guess,

60
00:02:40.700 --> 00:02:43.310
thank ... From me, thank you to the whole Haskell

61
00:02:43.310 --> 00:02:45.670
community for writing so much good stuff with such

62
00:02:45.670 --> 00:02:48.460
regularity. It makes my job collecting all of

63
00:02:48.460 --> 00:02:49.560
it a lot easier.

64
00:02:49.570 --> 00:02:52.500
>> Exactly. Yeah, I would also have that

65
00:02:52.500 --> 00:02:55.060
fear. I think of starting some sort of weekly

66
00:02:55.060 --> 00:02:58.020
news, uh news, grouping of

67
00:02:58.030 --> 00:03:00.980
articles and then not have anything to post. But, you

68
00:03:00.980 --> 00:03:03.950
know, Haskell weekly ... Haskell community

69
00:03:03.960 --> 00:03:06.580
is coming in strong for us at

70
00:03:06.590 --> 00:03:09.570
Haskell Weekly. Um but awesome. All right, Taylor. Well, I

71
00:03:09.570 --> 00:03:12.410
want to kind of jump in, um and I want you to kind of share maybe

72
00:03:12.410 --> 00:03:14.880
some of the highlights of your 2020

73
00:03:14.880 --> 00:03:17.810
and you know something you've learned, you know,

74
00:03:17.820 --> 00:03:20.770
work or Haskell related. Um, that,

75
00:03:20.780 --> 00:03:23.170
you know, you were like, Oh, this is pretty sweet.

76
00:03:24.740 --> 00:03:27.260
>> Oh man. You think I would have prepped for this? But

77
00:03:27.270 --> 00:03:30.180
questions catch me a little off guard. I'm gonna stall

78
00:03:30.180 --> 00:03:33.040
and pull one of the quotes that Adam put in this article that I really

79
00:03:33.040 --> 00:03:35.570
agreed with. And I'm not sure that it's something that has

80
00:03:35.580 --> 00:03:38.320
changed for me in 2020. But he

81
00:03:38.320 --> 00:03:41.260
says that an important perspective when writing code is

82
00:03:41.260 --> 00:03:43.800
understanding how it will exist through

83
00:03:43.800 --> 00:03:46.600
time and what demands will be placed on it and how the

84
00:03:46.600 --> 00:03:49.410
fundamental assumptions that code makes will inevitably

85
00:03:49.410 --> 00:03:52.250
change. And for me, and my career is a

86
00:03:52.250 --> 00:03:54.770
software engineer. That's something that I've just

87
00:03:54.770 --> 00:03:57.570
seen come true over and over again where,

88
00:03:57.570 --> 00:04:00.160
like sometimes there's a

89
00:04:00.160 --> 00:04:03.140
focus on how do I make this code as clever

90
00:04:03.140 --> 00:04:05.490
or performant or whatever is possible in

91
00:04:05.490 --> 00:04:07.870
isolation. But really, what's important is like,

92
00:04:08.340 --> 00:04:11.280
is it easy to change over time? And even

93
00:04:11.280 --> 00:04:14.080
as it passes hands, you know, through a team or something like that,

94
00:04:14.090 --> 00:04:16.990
at least in my career, that's the thing that has been important because I've worked

95
00:04:16.990 --> 00:04:19.920
on long running software with large teams

96
00:04:19.920 --> 00:04:22.590
of people or maybe large is a misnomer. I

97
00:04:22.600 --> 00:04:25.430
typically work for startups, so, you know, like less than

98
00:04:25.430 --> 00:04:28.390
10 people. But more than one. That's that's large,

99
00:04:28.390 --> 00:04:28.860
I think.

100
00:04:28.870 --> 00:04:29.610
>> Yeah,

101
00:04:29.620 --> 00:04:32.300
I Think any

102
00:04:32.300 --> 00:04:34.580
programmer knows that, you know, code you write

103
00:04:34.580 --> 00:04:37.270
5 minutes ago is now legacy.

104
00:04:37.340 --> 00:04:39.090
Something has changed

105
00:04:39.840 --> 00:04:42.620
because we experience that everyday. Working through a

106
00:04:42.620 --> 00:04:45.500
legacy API that I've been

107
00:04:45.510 --> 00:04:48.470
at ITPro for a long time. I literally just

108
00:04:48.470 --> 00:04:51.270
today I was looking at code I wrote in JavaScript

109
00:04:51.840 --> 00:04:54.270
four years ago and I was like, wow!

110
00:04:55.040 --> 00:04:56.680
>> You were a different person back then.

111
00:04:56.690 --> 00:04:59.680
>> Yeah, yeah, It's like this is gonna

112
00:04:59.680 --> 00:05:02.190
be great. It's awesome. Now it's trash. But that's

113
00:05:02.190 --> 00:05:04.790
okay. You know, we've learned and well,

114
00:05:04.790 --> 00:05:07.500
>> And now it's in the trash. So it's where it belongs.

115
00:05:07.510 --> 00:05:10.450
>> Yes, delete over 5000 lines of code

116
00:05:10.450 --> 00:05:11.350
today. So

117
00:05:11.360 --> 00:05:12.500
>> That's that's a good day.

118
00:05:12.510 --> 00:05:14.160
>> Good day at the office.

119
00:05:14.740 --> 00:05:17.650
>> So that's my non answer to your question. Cam, what's

120
00:05:17.650 --> 00:05:19.750
your answer about 2020?

121
00:05:19.760 --> 00:05:22.750
>> I mean, actually, it's funny because this is something Adam

122
00:05:22.750 --> 00:05:25.160
kind of mentioned at one point, um,

123
00:05:25.170 --> 00:05:27.960
is using stack or not Stack

124
00:05:27.970 --> 00:05:30.830
Well, yes, using that, he does mention that he's

125
00:05:30.830 --> 00:05:33.720
been using that. But what I meant to say is he's

126
00:05:33.720 --> 00:05:36.510
been using servant or you mentioned servant

127
00:05:36.520 --> 00:05:39.490
as far as like some type level shenanigans that you can kind

128
00:05:39.490 --> 00:05:42.360
of learn that will, you know, really

129
00:05:43.340 --> 00:05:45.950
be helpful in the long run. And I think we've

130
00:05:46.340 --> 00:05:48.900
really benefited from switching out

131
00:05:48.900 --> 00:05:51.860
API over to servant and slowly moving

132
00:05:51.860 --> 00:05:54.800
routes over because, you know, we've been getting documentation

133
00:05:54.800 --> 00:05:57.670
for free. We've been getting, ah, lot of, you know,

134
00:05:57.680 --> 00:06:00.310
benefits out of switching over to servant

135
00:06:00.320 --> 00:06:02.490
>> Testing for free. Certain types of tests.

136
00:06:02.500 --> 00:06:04.960
>> Yeah, we're testing for free. We get a lot of great

137
00:06:04.960 --> 00:06:07.760
benefits from over some of the other. You know,

138
00:06:07.770 --> 00:06:10.310
our other API that we framework we use

139
00:06:10.310 --> 00:06:13.110
Happstack you know, Happstack was good at the time, but now we've

140
00:06:13.110 --> 00:06:16.040
kind of understood the fundamentals of Haskell a little

141
00:06:16.040 --> 00:06:18.860
bit better, and we can kind of conceptualized type level

142
00:06:18.860 --> 00:06:21.590
shenanigans a little bit more as a team. And so I'm really

143
00:06:21.590 --> 00:06:24.090
happy that our team's kind of just taking servant by

144
00:06:24.090 --> 00:06:26.160
storm and really, you know,

145
00:06:27.040 --> 00:06:29.910
just really creating an API That's a

146
00:06:29.910 --> 00:06:32.490
joy to work in. um, especially as a web

147
00:06:32.490 --> 00:06:33.050
API.

148
00:06:33.840 --> 00:06:36.780
>> And that, you know, touches on something else that Adam talks about in this

149
00:06:36.780 --> 00:06:39.630
post of in general, preferring to write

150
00:06:39.630 --> 00:06:41.550
junior code but

151
00:06:42.310 --> 00:06:45.100
knowing the team you're with and knowing what they can handle

152
00:06:45.100 --> 00:06:48.080
and changing what you write to fit that so for

153
00:06:48.080 --> 00:06:50.730
me, you know, one of the reasons that we were using

154
00:06:50.730 --> 00:06:53.600
Happstack was that it is. I mean,

155
00:06:53.610 --> 00:06:56.500
it's got some complicated stuff behind the scenes, but generally when you use it,

156
00:06:56.500 --> 00:06:59.490
it's pretty straightforward. It's just like, write stuff in a monad and

157
00:06:59.490 --> 00:07:02.420
it'll work. Um, whereas servant has a much higher

158
00:07:02.420 --> 00:07:04.970
bar to clear and you get a lot of benefits from it. But

159
00:07:05.340 --> 00:07:07.850
I have been pleasantly

160
00:07:07.850 --> 00:07:10.490
surprised that our team, which has quite a few junior

161
00:07:10.490 --> 00:07:12.860
engineers on it that are not familiar with Haskell,

162
00:07:12.870 --> 00:07:15.850
um has been able to pick up servant and run with it. It's

163
00:07:15.850 --> 00:07:16.370
been great.

164
00:07:16.740 --> 00:07:19.390
>> Yeah, yeah, I think you know that Helps to

165
00:07:19.390 --> 00:07:21.930
have also senior people on the team that

166
00:07:21.930 --> 00:07:24.780
have kind of led the way. Um, and kind

167
00:07:24.780 --> 00:07:27.710
of you know demystified some

168
00:07:27.710 --> 00:07:30.480
of what's happening, eh? So we can all kind of learn from one

169
00:07:30.480 --> 00:07:33.230
another. Um, really? Well, and I think, honestly,

170
00:07:33.230 --> 00:07:36.060
2020 was a year that we had to

171
00:07:36.060 --> 00:07:38.980
grow together, you know, in a different kind of way. You know, usually

172
00:07:38.980 --> 00:07:41.770
we're in the office, and we're sitting next to each other, and, you know,

173
00:07:41.780 --> 00:07:44.770
we always We've been pairs for a long time, but I think

174
00:07:45.340 --> 00:07:47.910
at this point 2020 kind of push just to

175
00:07:47.910 --> 00:07:50.190
be even a tighter knit group

176
00:07:50.200 --> 00:07:52.830
where, you know, we're communicating better. We're

177
00:07:52.840 --> 00:07:55.430
teaching each other, you know, healthy habits

178
00:07:55.430 --> 00:07:58.150
and just really, you know, helping each other,

179
00:07:58.640 --> 00:08:01.480
uh, build together as our company slogan

180
00:08:01.480 --> 00:08:04.370
currently is, Uh,

181
00:08:04.380 --> 00:08:07.280
but you know, that's you know, that's

182
00:08:07.280 --> 00:08:10.280
what 2020 really offered us. So, you know, I'm

183
00:08:10.280 --> 00:08:13.270
really thankful for that um, but I think you

184
00:08:13.270 --> 00:08:16.020
know, for us as a team, we're

185
00:08:16.030 --> 00:08:18.950
like, what? Year two, year three of Haskell

186
00:08:18.950 --> 00:08:19.470
writing?

187
00:08:19.940 --> 00:08:22.610
>> Three. Little more than three. Because I joined

188
00:08:22.620 --> 00:08:25.250
right after y'all had switched to Haskell

189
00:08:25.720 --> 00:08:27.470
and I'm coming up on my third year.

190
00:08:28.140 --> 00:08:31.020
>> Mm. Okay. Yeah. So we're in

191
00:08:31.020 --> 00:08:33.670
three years of writing Haskell, and, you know, I think last year was

192
00:08:33.670 --> 00:08:36.340
really a year that we

193
00:08:36.340 --> 00:08:39.340
stopped worrying about JavaScript code or

194
00:08:39.350 --> 00:08:42.260
worrying about migrations from various platforms. And we

195
00:08:42.260 --> 00:08:44.980
have been just really solely working on

196
00:08:44.990 --> 00:08:47.740
the ITProTV product So I think that

197
00:08:47.740 --> 00:08:50.390
was really great. Um, yeah.

198
00:08:50.400 --> 00:08:53.230
>> And I'm sure that, you know, the remote members of our

199
00:08:53.230 --> 00:08:56.090
team are very glad that we're

200
00:08:56.100 --> 00:08:59.020
remote first. Now, everyone's in the same shoes that

201
00:08:59.020 --> 00:09:01.660
they've been in the whole time. So we understand their

202
00:09:01.660 --> 00:09:03.240
plight a little better.

203
00:09:03.250 --> 00:09:05.560
>> Mhmm oh, yeah.

204
00:09:06.240 --> 00:09:09.170
Um, but yeah. So back to the post too

205
00:09:09.180 --> 00:09:11.670
is he He talks about

206
00:09:12.240 --> 00:09:15.160
type level witnesses, which he tried out. Hey,

207
00:09:15.160 --> 00:09:17.690
had a little little difficulty. Um,

208
00:09:17.700 --> 00:09:20.690
honestly, I really never heard of, you

209
00:09:20.690 --> 00:09:23.640
know, the type level witnesses. So I really should probably

210
00:09:23.640 --> 00:09:26.370
follow the blog posts because he linked to

211
00:09:26.840 --> 00:09:29.800
a type level witness blog post. So I

212
00:09:29.800 --> 00:09:32.580
should definitely check that out. But do you know anything

213
00:09:32.580 --> 00:09:33.170
about that?

214
00:09:33.640 --> 00:09:36.430
>> I don't. I pulled up the blog post, so I'm trying to scan it really

215
00:09:36.430 --> 00:09:39.110
quick. If I had to guess, I think this would be about

216
00:09:39.110 --> 00:09:41.660
the like, um, ghosts of

217
00:09:41.660 --> 00:09:44.650
departed proofs paper where

218
00:09:45.040 --> 00:09:47.910
you encode information in the

219
00:09:47.920 --> 00:09:50.550
at the type level, so that once you

220
00:09:50.560 --> 00:09:52.970
prove something via like a smart

221
00:09:52.970 --> 00:09:55.960
constructor, you have evidence of that proof that you

222
00:09:55.960 --> 00:09:58.870
can carry along. So the canonical example would

223
00:09:58.870 --> 00:10:01.520
be like, um, you have proved that a

224
00:10:01.520 --> 00:10:04.330
number is odd. So now your type is odd

225
00:10:04.330 --> 00:10:07.250
number rather than just number or integer or whatever.

226
00:10:07.640 --> 00:10:10.510
Um, and in general, like, you can do that

227
00:10:10.510 --> 00:10:13.460
with new type wrappers for any particular type. But

228
00:10:13.460 --> 00:10:16.010
in general, if you want to connect like,

229
00:10:16.020 --> 00:10:18.710
uh, refinements or constraints to

230
00:10:18.710 --> 00:10:21.680
stuff, there's a more principled way to do all of

231
00:10:21.680 --> 00:10:24.370
that. And I think that's what this type level witness stuff

232
00:10:24.370 --> 00:10:26.850
is. Although maybe I could be grossly

233
00:10:26.850 --> 00:10:29.730
misrepresenting it. So I apologize. If I am.

234
00:10:29.740 --> 00:10:32.730
>> Maybe we'll cover that in another weeks of

235
00:10:32.740 --> 00:10:34.550
Haskell weekly podcast here, you know,

236
00:10:35.240 --> 00:10:37.840
um, but yeah. Okay. So thank you for

237
00:10:37.850 --> 00:10:40.410
trying to give me some insight there.

238
00:10:40.420 --> 00:10:43.090
>> Yeah, and so my my reading of

239
00:10:43.100 --> 00:10:45.970
his, you know, hesitation about using type level

240
00:10:45.970 --> 00:10:48.840
witnesses is that they are nice and they

241
00:10:48.840 --> 00:10:51.800
give you some good things. But the interface for using them

242
00:10:51.800 --> 00:10:54.300
is too clunky or too complex or too

243
00:10:54.300 --> 00:10:57.070
difficult for him, which I think is a fair

244
00:10:57.070 --> 00:10:59.300
complaint. Not just about type level witnesses,

245
00:10:59.300 --> 00:11:02.190
but many things in type level

246
00:11:02.190 --> 00:11:05.050
Haskell. And, you know, for me, that was one of the

247
00:11:05.060 --> 00:11:07.960
reasons I push back on Servant for so long is like Well,

248
00:11:07.960 --> 00:11:10.960
yeah, I can see all the benefits, but I'm

249
00:11:10.960 --> 00:11:12.860
not sure what all the downsides are.

250
00:11:13.440 --> 00:11:16.360
>> Yeah, yeah, it definitely you with

251
00:11:16.360 --> 00:11:18.600
high overhead to understand. Something

252
00:11:18.610 --> 00:11:21.610
really tends to rub me the wrong way as well,

253
00:11:21.620 --> 00:11:24.360
because I'm like, Well, you know, it's not just me

254
00:11:24.370 --> 00:11:27.140
at 'sthat writing this code like it's an entire

255
00:11:27.140 --> 00:11:30.120
team. We all need to be able to handle this. And

256
00:11:30.130 --> 00:11:33.060
if it's clunky and harder to use like it's just not

257
00:11:33.060 --> 00:11:34.110
ready, then you know.

258
00:11:34.120 --> 00:11:37.050
>> And it's not only is it hard to write or

259
00:11:37.050 --> 00:11:39.820
use but, like, maintain or understand when

260
00:11:39.820 --> 00:11:42.430
something goes wrong. We ran into that the other day with

261
00:11:42.430 --> 00:11:45.240
Servant, where we had moved an in

262
00:11:45.240 --> 00:11:47.990
point from our old service to our new one. And it

263
00:11:47.990 --> 00:11:50.770
wasn't behaving the same. And like everything we could look at was the

264
00:11:50.770 --> 00:11:53.570
same. It was, oh, something behind the scenes that servant is

265
00:11:53.570 --> 00:11:56.530
doing. It's actually more correct and like, it's good

266
00:11:56.530 --> 00:11:59.370
that it's doing that thing, but we weren't aware of

267
00:11:59.370 --> 00:12:02.200
that. So it was hard for us to debug this problem because we were

268
00:12:02.200 --> 00:12:04.750
looking at our application code rather than the, you know,

269
00:12:05.240 --> 00:12:06.220
servant code,

270
00:12:06.380 --> 00:12:09.340
>> right? Yeah. But, you

271
00:12:09.340 --> 00:12:12.340
know, with time, everybody kinda can work through those clunks

272
00:12:12.340 --> 00:12:15.320
and, you know, maybe Adam in 2021

273
00:12:15.320 --> 00:12:18.260
can, you know, master with, you know, type

274
00:12:18.260 --> 00:12:21.130
level witnesses, and you look forward to reading

275
00:12:21.130 --> 00:12:22.960
his post next January

276
00:12:22.970 --> 00:12:25.610
>> I finally figured out Type level witnesses,

277
00:12:25.610 --> 00:12:26.180
Yes!

278
00:12:26.190 --> 00:12:28.680
>> or maybe. Hey, if you want to write it in

279
00:12:28.680 --> 00:12:30.760
2021 I'm all for it.

280
00:12:31.140 --> 00:12:33.800
Definitely down to check it out. Ah,

281
00:12:33.800 --> 00:12:36.690
yeah. Um so

282
00:12:36.700 --> 00:12:39.630
I think this is something we faced, and we've gone through

283
00:12:39.630 --> 00:12:42.570
many iterations of build systems

284
00:12:42.570 --> 00:12:45.000
and, you know, we've we're using

285
00:12:45.000 --> 00:12:47.950
Stack, but we know it's limitations, and we're we

286
00:12:47.950 --> 00:12:50.160
rub up against it. We thought about Nix

287
00:12:50.540 --> 00:12:53.530
like, and he kind of mentioned this in the blog post,

288
00:12:53.530 --> 00:12:56.290
and he's kind of gives his his two cents per

289
00:12:56.290 --> 00:12:59.150
se about it, Um, which I thought

290
00:12:59.150 --> 00:13:02.040
was was informative. I think you know, for

291
00:13:02.040 --> 00:13:05.000
us we want all the

292
00:13:05.000 --> 00:13:08.000
caching we could get so if we could do Nix like we're all about

293
00:13:08.000 --> 00:13:10.880
it. But like he says, it's a little complicated until we've

294
00:13:10.880 --> 00:13:13.670
kind of, you know, we have some team members who

295
00:13:13.670 --> 00:13:16.570
use NixOS and they will not be named they're

296
00:13:16.570 --> 00:13:19.040
great. Uh, but

297
00:13:19.050 --> 00:13:21.250
>> names have been changed to protect the innocent.

298
00:13:22.540 --> 00:13:25.060
Yeah, I mean, Nix has been like a pipe dream for us

299
00:13:25.060 --> 00:13:27.990
for years and not so much like

300
00:13:27.990 --> 00:13:30.820
nix the technology but the stuff that it brings. Like you

301
00:13:30.820 --> 00:13:33.740
mentioned with caching because we have spent a lot

302
00:13:33.740 --> 00:13:36.440
of engineering hours trying to get the caching not

303
00:13:36.440 --> 00:13:38.770
only on our local machines, but on CI,

304
00:13:39.340 --> 00:13:42.230
uh, to get our caching in a good place with stack so that we

305
00:13:42.230 --> 00:13:45.180
don't spend, you know, 15 minutes waiting for a really small

306
00:13:45.180 --> 00:13:46.960
change to go through our CI process.

307
00:13:47.540 --> 00:13:50.370
>> Yeah. So you're saying if we could get the cache

308
00:13:50.370 --> 00:13:51.450
right, we would save a lot of

309
00:13:51.450 --> 00:13:54.040
cash?

310
00:13:54.540 --> 00:13:55.770
>> Very true. Yeah.

311
00:13:56.340 --> 00:13:59.160
>> Yeah, You're welcome. I'll be here all year.

312
00:13:59.440 --> 00:14:02.300
Maybe outrage

313
00:14:02.300 --> 00:14:05.290
from from viewers. Get this kid off of this

314
00:14:05.300 --> 00:14:08.080
>> We Can't handle those Haskell puns anymore.

315
00:14:08.090 --> 00:14:09.760
Kick him off the podcast.

316
00:14:10.140 --> 00:14:12.980
>> He's out of here. All right, Well, then you'll get

317
00:14:12.980 --> 00:14:14.050
Taylor by himself because

318
00:14:14.640 --> 00:14:16.170
>> my puns are just as Bad

319
00:14:17.540 --> 00:14:20.460
>> Fair. But hey, at least we've got them, right? Dad jokes for

320
00:14:20.460 --> 00:14:20.990
days.

321
00:14:21.000 --> 00:14:23.730
>> Yeah. Um, but yeah, I I liked

322
00:14:23.730 --> 00:14:26.580
hearing his take on build systems because

323
00:14:26.580 --> 00:14:29.380
it kind of matches ours. Like we're using Stack. There are some things

324
00:14:29.380 --> 00:14:32.100
about it that annoy us, but not enough to push us on.

325
00:14:32.100 --> 00:14:35.100
Anything else and something like Nix would be great. We

326
00:14:35.100 --> 00:14:38.050
could probably get away with using Cabal directly, but Stack gives

327
00:14:38.050 --> 00:14:40.760
us some niceties that we want to stick with. Although I was

328
00:14:40.760 --> 00:14:43.650
surprised to hear that this, like, flat name

329
00:14:43.650 --> 00:14:46.650
space error that he mentions. I don't think I've ever seen that. And we have

330
00:14:46.660 --> 00:14:49.330
eight people working on stack working with

331
00:14:49.330 --> 00:14:52.080
stack all day every day. Um,

332
00:14:52.090 --> 00:14:54.790
so I don't know. He says the dreaded like it's some well known

333
00:14:54.790 --> 00:14:57.470
thing I have never seen. Knock on wood.

334
00:14:57.840 --> 00:15:00.750
>> Same. Yeah. Tomorrow. Coming to work

335
00:15:00.760 --> 00:15:03.750
tomorrow. Saturday. But come in Monday, and it's gonna

336
00:15:03.750 --> 00:15:06.690
be just like, uh, nobody

337
00:15:06.690 --> 00:15:09.530
can work today. We're all work through this problem together.

338
00:15:09.540 --> 00:15:12.190
Uh, but yeah. So then he moves

339
00:15:12.190 --> 00:15:15.020
on from build systems to kind off some of the

340
00:15:15.020 --> 00:15:17.670
tools which I guess can play into the build

341
00:15:17.670 --> 00:15:20.580
system. Uh, but, you know, it sounds like he's a

342
00:15:20.580 --> 00:15:23.540
ghcid fan, which we here it ITProTV

343
00:15:23.540 --> 00:15:25.800
are also ghcid fans.

344
00:15:26.240 --> 00:15:28.830
>> Yeah, it's surprising how helpful ghcid

345
00:15:28.830 --> 00:15:31.820
is, given that it's such a simple tool like it

346
00:15:31.820 --> 00:15:34.800
hardly does anything in principle. It's like if you

347
00:15:34.800 --> 00:15:37.670
started GHCi and just hit colon reload

348
00:15:37.670 --> 00:15:40.470
over and over again every time you saved a file. But

349
00:15:40.480 --> 00:15:43.230
that's really helpful. I mean, GHC is a nice

350
00:15:43.230 --> 00:15:46.030
compiler, especially once you're familiar with

351
00:15:46.040 --> 00:15:48.870
how it reports errors to you, right?

352
00:15:49.240 --> 00:15:51.380
Um but yeah, that, like

353
00:15:51.390 --> 00:15:54.040
ghcid by itself is great. So

354
00:15:54.050 --> 00:15:56.250
thank you, Neil Mitchell, for starting that

355
00:15:57.340 --> 00:16:00.180
>> Whoo! Yeah, And then we've got you know,

356
00:16:00.190 --> 00:16:03.180
something? I think we've tried here. It ITPro At least a few of us

357
00:16:03.180 --> 00:16:06.060
have is getting Haskell language server

358
00:16:06.070 --> 00:16:08.760
up and going. Um, you know,

359
00:16:09.140 --> 00:16:11.370
we've caused some crashes from that.

360
00:16:11.380 --> 00:16:14.210
>> I was going to say it's a running joke that when one of

361
00:16:14.210 --> 00:16:17.020
our one of the guys on our team runs HLS, it's like,

362
00:16:17.020 --> 00:16:19.770
Well, his machine is gonna crash sometime in the next 48

363
00:16:19.770 --> 00:16:21.820
hours. We don't know when, but it will

364
00:16:21.820 --> 00:16:22.960
happen.

365
00:16:22.970 --> 00:16:25.890
>> Yeah, but, I mean, that would work if you turn the machine

366
00:16:25.890 --> 00:16:26.570
off every night.

367
00:16:26.540 --> 00:16:29.190
>> But yeah. And this was a long time ago that this, you know,

368
00:16:29.190 --> 00:16:31.990
internal meme came up, So I'm sure HLS is

369
00:16:31.990 --> 00:16:34.710
better. Um, but we haven't tried it in the

370
00:16:34.710 --> 00:16:35.250
meantime.

371
00:16:35.640 --> 00:16:37.860
>> Yeah, Yeah, it's been a minute. Um,

372
00:16:38.540 --> 00:16:41.530
because HLS and HIE all

373
00:16:41.530 --> 00:16:42.770
kind of merged together, right?

374
00:16:43.440 --> 00:16:46.305
>> I have not been able to keep track of all the naming, and

375
00:16:46.305 --> 00:16:48.860
merging, but I think that's true or HLS includes

376
00:16:48.860 --> 00:16:50.370
HIE or something like that.

377
00:16:51.540 --> 00:16:54.440
Mhm. Yeah, Yeah, they

378
00:16:54.440 --> 00:16:57.330
fixed a bunch of memory leaks, and supposedly, it's a lot better and

379
00:16:57.330 --> 00:16:59.360
faster now, but I haven't given another chance.

380
00:16:59.940 --> 00:17:02.540
>> Yeah, you know, I just use this little

381
00:17:02.550 --> 00:17:05.300
Adam, uh, VSCode plug in called

382
00:17:05.300 --> 00:17:07.550
purple yolk. That this guy made

383
00:17:07.560 --> 00:17:10.460
>> I didn't wanna plug my own plug in, but

384
00:17:10.460 --> 00:17:13.450
yes, I wrote one called Purple Yolk, and it behaves a lot

385
00:17:13.450 --> 00:17:16.310
like ghcid where really it just spins up

386
00:17:16.310 --> 00:17:19.280
GHCi in the background and reloads it for you a bunch and gives

387
00:17:19.280 --> 00:17:22.140
you the little red squiggly underlines which works really

388
00:17:22.140 --> 00:17:22.870
well for me.

389
00:17:23.340 --> 00:17:25.860
>> Hey, More to come in 2021 Probably.

390
00:17:25.870 --> 00:17:28.850
>> Yeah. I might make, like three commits to it this

391
00:17:28.850 --> 00:17:30.450
year

392
00:17:30.940 --> 00:17:33.700
>> if we could get, like, a quick jump or something

393
00:17:33.700 --> 00:17:34.800
working with it. Uh,

394
00:17:34.810 --> 00:17:37.200
>> well, yeah, I was gonna say one of the other tools that he mentions his

395
00:17:37.200 --> 00:17:40.200
hasktags and that has been really useful again. It's

396
00:17:40.200 --> 00:17:43.090
like a relatively simple tool, and it doesn't

397
00:17:43.090 --> 00:17:45.950
do a whole lot, But just being able to say, like, keyboard

398
00:17:45.950 --> 00:17:48.880
shortcut jump to where this thing is defined amazingly

399
00:17:48.880 --> 00:17:51.755
useful because I do that all the time And what I used to do was select

400
00:17:51.755 --> 00:17:54.690
it and search through the whole project for it. And then, like, oh, no, these

401
00:17:54.690 --> 00:17:56.550
are your call sites, not definition sites.

402
00:17:56.940 --> 00:17:57.530
>> Yeah,

403
00:17:57.540 --> 00:17:58.610
>> I'm a cave man.

404
00:18:00.110 --> 00:18:02.490
>> I still I'm stuck doing that because

405
00:18:04.750 --> 00:18:07.730
I guess I lost my hasktags configuration or something along those lines

406
00:18:07.730 --> 00:18:10.580
with VSCode. But so I

407
00:18:10.580 --> 00:18:13.500
really haven't been doing that. I've been doing the control shift f with

408
00:18:13.500 --> 00:18:16.480
the highlighted word and yeah, then being like,

409
00:18:16.490 --> 00:18:18.880
uh, scroll, scroll, scroll! Oh, there it It's

410
00:18:18.880 --> 00:18:21.750
OK, Maybe that's one of

411
00:18:21.750 --> 00:18:24.160
my 2021 resolutions. Just get that

412
00:18:24.840 --> 00:18:27.270
get away. Working again? Yeah,

413
00:18:27.940 --> 00:18:30.560
It's like it's one of those things. Like it

414
00:18:30.560 --> 00:18:32.580
broke, but it wasn't a huge inconvenience.

415
00:18:33.040 --> 00:18:35.670
Yeah, I don't know. I guess I have a high

416
00:18:35.670 --> 00:18:37.170
tolerance for inconvenience.

417
00:18:37.940 --> 00:18:40.800
>> Well, you know, it's a little thing where you don't feel the

418
00:18:40.800 --> 00:18:43.630
pain that much. It's like, Oh, yeah. It took me five seconds to

419
00:18:43.630 --> 00:18:45.560
find this definition instead of one second.

420
00:18:46.040 --> 00:18:49.020
And maybe you don't do that operation enough

421
00:18:49.020 --> 00:18:51.410
for it to matter, or it's like, just part of your work flow.

422
00:18:51.410 --> 00:18:53.690
So you keep

423
00:18:53.700 --> 00:18:56.460
>> your like, uh,

424
00:18:57.040 --> 00:18:59.970
yeah, so anything I definitely think the

425
00:18:59.970 --> 00:19:02.890
tooling in 2020 was. You know, there's

426
00:19:02.890 --> 00:19:05.680
some major improvements that happened there. Um, for

427
00:19:05.680 --> 00:19:08.200
sure. So, yeah. Team

428
00:19:08.200 --> 00:19:10.760
ghcid always the old

429
00:19:10.760 --> 00:19:13.740
reliable at this point, HLS is the cool, new

430
00:19:13.740 --> 00:19:16.590
shiny toy that you know, has a squeaky wheel

431
00:19:16.590 --> 00:19:19.370
here and there. Mhm So.

432
00:19:19.740 --> 00:19:22.580
But yeah. So then he kind of moves on talking

433
00:19:22.580 --> 00:19:25.580
about the release of GHC 9.

434
00:19:26.040 --> 00:19:26.550
Done done.

435
00:19:27.440 --> 00:19:30.000
>> Yeah, that's a big one. Which maybe we should do a whole

436
00:19:30.000 --> 00:19:32.850
episode on that, But I feel like I'm not qualified for it

437
00:19:32.850 --> 00:19:35.570
because the big like, you know, headline release

438
00:19:35.580 --> 00:19:38.310
or feature for GHC 9 is linear

439
00:19:38.310 --> 00:19:40.710
types, which are really exciting,

440
00:19:40.720 --> 00:19:43.610
but I don't really know anything

441
00:19:43.610 --> 00:19:45.060
about them, so

442
00:19:45.740 --> 00:19:48.690
>> Okay, it will be good. Maybe we'll learn about it and then talk

443
00:19:48.690 --> 00:19:51.560
about it will be good practice. Good. Yeah,

444
00:19:52.040 --> 00:19:54.530
>> but yeah. The first release candidate for GHC

445
00:19:54.530 --> 00:19:57.460
9 was released. Um, I think I installed it

446
00:19:57.460 --> 00:19:59.780
on one of my machines, but I haven't really played with it yet.

447
00:20:00.240 --> 00:20:02.870
>> Mhm. Yeah, I haven't

448
00:20:03.340 --> 00:20:05.310
at all. Didn't even know there is a pre release version

449
00:20:06.200 --> 00:20:09.190
So you know, that's how in the know I am here. Uh,

450
00:20:09.200 --> 00:20:11.850
just hosting the Haskell weekly podcast. No big deal.

451
00:20:12.340 --> 00:20:14.960
>> Yeah, I'm kind of into Haskell. Wait. There's a GHC

452
00:20:14.960 --> 00:20:15.500
9?

453
00:20:15.510 --> 00:20:18.240
>> What's GHC?

454
00:20:18.250 --> 00:20:19.990
>> I use

455
00:20:19.990 --> 00:20:21.550
Hugs

456
00:20:21.550 --> 00:20:23.760
>> Hugs Not drugs

457
00:20:24.740 --> 00:20:27.640
any. Uh yeah. And then

458
00:20:27.650 --> 00:20:30.130
another great thing that happened in 2020 that was

459
00:20:30.140 --> 00:20:32.770
announced near the end. Was the Haskell

460
00:20:32.770 --> 00:20:35.620
foundation being formed? I think that was

461
00:20:35.620 --> 00:20:37.770
a big win for 2020.

462
00:20:38.540 --> 00:20:41.020
>> Yeah, I'm really looking forward to seeing where that

463
00:20:41.020 --> 00:20:43.860
goes. Right now, it's kind of nebulous, like it is a

464
00:20:43.860 --> 00:20:46.520
good thing that it's there and they've secured a bunch of funding

465
00:20:46.520 --> 00:20:48.680
and all the right people are involved. But

466
00:20:49.440 --> 00:20:52.060
what are they going to do? I want to see what

467
00:20:52.060 --> 00:20:52.560
happens.

468
00:20:53.540 --> 00:20:55.670
>> Yes, we can all sit there like pet

469
00:20:56.140 --> 00:20:58.840
our cats And with a maniacal

470
00:20:58.840 --> 00:21:00.080
cackle,

471
00:21:00.090 --> 00:21:03.060
>> Mr Bigglesworth. Yeah, yeah,

472
00:21:03.740 --> 00:21:06.670
but, um but yeah, those are definitely things, like maybe at

473
00:21:06.670 --> 00:21:09.090
the end of 2021 we'll look back and

474
00:21:09.090 --> 00:21:11.880
say, you know, GHC 9 was this

475
00:21:11.890 --> 00:21:14.750
watershed moment for the community. Linear types

476
00:21:14.750 --> 00:21:17.670
are amazing and change the world. Um,

477
00:21:17.670 --> 00:21:20.500
and Haskell Foundation united all these disparate

478
00:21:20.500 --> 00:21:23.440
projects and really helped push the ball forward or push

479
00:21:23.440 --> 00:21:25.670
the lift the boat up, Whatever the expression is,

480
00:21:25.840 --> 00:21:28.750
rather yeah, row the boat. Get everyone

481
00:21:28.750 --> 00:21:30.750
rowing in the same direction. There we go. We got there.

482
00:21:30.760 --> 00:21:33.100
>> Lift. Lift the boat. Uh,

483
00:21:33.110 --> 00:21:34.000
rising.

484
00:21:34.010 --> 00:21:36.530
>> Rising tide lifts all boats is what I was going for, but

485
00:21:36.540 --> 00:21:39.270
>> oh, gotcha They're all rising.

486
00:21:39.280 --> 00:21:41.100
Tides were just pouring water into the ocean.

487
00:21:41.110 --> 00:21:43.060
>> Yeah, there's too many idioms to pick from.

488
00:21:43.440 --> 00:21:45.940
>> Yeah, you mixed them up. That's okay. We like we like,

489
00:21:45.940 --> 00:21:47.070
merged stuff here.

490
00:21:47.540 --> 00:21:50.450
Yeah. Yeah. So I'm gonna

491
00:21:50.450 --> 00:21:53.120
put you back on the spot again since You denied My

492
00:21:53.120 --> 00:21:55.400
last time I asked the question, but what

493
00:21:55.400 --> 00:21:58.360
was? Yeah, one thing that sticks out in your mind of

494
00:21:58.360 --> 00:22:01.050
something you learned in 2020 can be meta.

495
00:22:01.700 --> 00:22:04.680
It could be code related. It could be

496
00:22:05.340 --> 00:22:05.900
so

497
00:22:05.910 --> 00:22:08.890
>> So I got something. It's kind of code related, and it's actually my,

498
00:22:08.900 --> 00:22:11.840
um, my resolution for this

499
00:22:11.840 --> 00:22:14.370
year, and it is to write less

500
00:22:14.370 --> 00:22:16.990
code at work. So for

501
00:22:16.990 --> 00:22:19.320
those listeners that aren't employees of

502
00:22:19.320 --> 00:22:22.310
ITPro um, I I manage the team

503
00:22:22.310 --> 00:22:25.190
of engineers here, but I also in the past year

504
00:22:25.190 --> 00:22:28.160
and my whole time here, have done a lot of engineering myself,

505
00:22:28.170 --> 00:22:30.660
and I've found that, um,

506
00:22:30.940 --> 00:22:33.860
it can often I often use that as like a short cut of like, I

507
00:22:33.860 --> 00:22:36.460
know how I want this done, so I'll just do it.

508
00:22:36.940 --> 00:22:39.350
But that kind of robs everyone else on the team of that

509
00:22:39.350 --> 00:22:42.130
opportunity of poking around and trying it out and

510
00:22:42.130 --> 00:22:45.100
seeing what works and what doesn't work. So one of my goals for the new

511
00:22:45.100 --> 00:22:48.020
year is, to Let my team

512
00:22:48.030 --> 00:22:50.920
explore the space of how to solve problems,

513
00:22:50.920 --> 00:22:53.480
and I'll be happy to give direction and coach.

514
00:22:53.480 --> 00:22:56.360
But I want to write less code at

515
00:22:56.360 --> 00:22:56.760
work.

516
00:22:57.340 --> 00:22:59.250
>> Can I have that resolution too?

517
00:22:59.260 --> 00:23:02.170
>> the whole team.

518
00:23:02.170 --> 00:23:05.060
Can't write less code. Or maybe we can. Maybe that's what we should go for

519
00:23:05.060 --> 00:23:07.930
>> it. Yeah, just minimalistic. I mean, no just

520
00:23:07.930 --> 00:23:10.490
kidding. No, I think there's a lot to learn in

521
00:23:10.490 --> 00:23:13.050
2021. Looking forward. To writing more code?

522
00:23:13.740 --> 00:23:15.360
Yeah. Solving more problems.

523
00:23:16.140 --> 00:23:18.780
>> Yeah. Oh, that reminds me. Um,

524
00:23:19.140 --> 00:23:21.950
I gave up on the advent of code on, like, day

525
00:23:21.950 --> 00:23:24.920
22 or 23. We were talking about that. on I think the last time

526
00:23:24.930 --> 00:23:27.870
we recorded How did you do on it Cam?

527
00:23:28.540 --> 00:23:30.970
>> Chuckles just chuckles.

528
00:23:31.840 --> 00:23:34.660
I mean, if you count getting through

529
00:23:35.440 --> 00:23:38.170
day four. Part one is a win, then, Yeah,

530
00:23:38.740 --> 00:23:41.740
I think it's further than I made it in any other years of

531
00:23:41.740 --> 00:23:44.130
advent of code. I think I totally skipped it in

532
00:23:44.130 --> 00:23:46.060
2019 and 2018. I did like,

533
00:23:46.940 --> 00:23:49.860
a couple of days. It's just hard to like,

534
00:23:50.440 --> 00:23:53.420
Yeah, I didn't have a ton of, like, you know, here at

535
00:23:53.420 --> 00:23:56.310
the house. We've got a new puppy. We were doing

536
00:23:56.310 --> 00:23:59.040
home renovations. So, like, doing stuff outside of

537
00:23:59.040 --> 00:24:01.470
work is generally not coding

538
00:24:01.480 --> 00:24:02.970
 So

539
00:24:02.980 --> 00:24:05.900
>> it takes a surprising amount of time. Even if you're good

540
00:24:05.900 --> 00:24:08.460
at those types of puzzles You still have to, like,

541
00:24:08.940 --> 00:24:11.690
read it and understand what it's asking and try it out and

542
00:24:11.690 --> 00:24:14.560
debug it. And, you know, then you want to write, you know, make your own

543
00:24:14.560 --> 00:24:17.200
code better and all that. So, yeah, it's it's a big time

544
00:24:17.200 --> 00:24:17.670
commitment.

545
00:24:18.240 --> 00:24:21.040
>> Yeah, it wasn't Wasn't ready for it. Yeah,

546
00:24:21.050 --> 00:24:23.920
So maybe I'll prep everything next year and just be

547
00:24:23.920 --> 00:24:26.790
like, all right. From December 1st to

548
00:24:26.790 --> 00:24:28.870
December 25th, I code.

549
00:24:29.540 --> 00:24:32.250
>> I got an hour a day blocked out on my calendar. Don't

550
00:24:32.250 --> 00:24:32.950
interrupt me.

551
00:24:32.960 --> 00:24:35.900
>> Yeah, just take off time of work. It's like,

552
00:24:35.910 --> 00:24:38.650
take my sick, sick days like an hour

553
00:24:38.660 --> 00:24:39.260
every day

554
00:24:40.240 --> 00:24:42.160
>> spread one sick day over a whole week.

555
00:24:42.740 --> 00:24:44.180
>> Yeah. Can I make that work?

556
00:24:45.240 --> 00:24:47.640
>> We'll see. HR has to weigh in on

557
00:24:47.640 --> 00:24:48.440
that.

558
00:24:48.450 --> 00:24:51.290
>> Fair enough, But yeah, so you

559
00:24:51.290 --> 00:24:54.260
know that's 2020. Now we're

560
00:24:54.270 --> 00:24:57.020
heading into 2021. And, you know, we've got

561
00:24:57.020 --> 00:24:59.830
a new slew of opportunities for

562
00:24:59.830 --> 00:25:02.560
Haskell weekly podcast, and we actually also would love to

563
00:25:02.560 --> 00:25:05.290
invite any of our listeners or blog

564
00:25:05.290 --> 00:25:08.250
post authors who are interested in maybe sharing what they

565
00:25:08.250 --> 00:25:11.040
have to say on Haskell podcast we love for you to

566
00:25:11.040 --> 00:25:13.690
reach out. Um, Taylor, where can they find

567
00:25:13.690 --> 00:25:14.060
us?

568
00:25:14.840 --> 00:25:17.840
>> Yeah, I was gonna say, uh, we have mentioned that before, kind of

569
00:25:17.840 --> 00:25:20.700
in passing. But really, if you want to be a guest on the podcast, if you got something to

570
00:25:20.700 --> 00:25:23.680
say or if we have grossly misrepresented one of your own

571
00:25:23.680 --> 00:25:26.070
blog posts, please come on and correct the record.

572
00:25:26.080 --> 00:25:28.660
Uh, and you can find us at

573
00:25:28.670 --> 00:25:31.100
Haskell weekly dot news or you can email us

574
00:25:31.110 --> 00:25:34.070
at info at Haskell weekly dot news

575
00:25:34.440 --> 00:25:37.190
or Twitter. Our handle is Haskell

576
00:25:37.190 --> 00:25:39.570
Weekly. Those are all the best ways to get us or on GitHub.

577
00:25:39.940 --> 00:25:42.560
Our user name is Haskell Weekly, and you could make an issue on the

578
00:25:42.560 --> 00:25:45.490
repo or pull request or whatever. Um, any of those

579
00:25:45.490 --> 00:25:48.450
places I will hopefully notice and get

580
00:25:48.450 --> 00:25:49.080
back to you.

581
00:25:49.090 --> 00:25:52.000
>> Yeah. Or you can look up Taylor Fausak on Google.

582
00:25:52.000 --> 00:25:53.860
Find this phone number and call them.

583
00:25:54.340 --> 00:25:56.680
>> Please don't. Hopefully my number is not online, but

584
00:25:57.140 --> 00:25:58.420
screen all my calls.

585
00:25:58.430 --> 00:26:01.370
>> At this point. I feel like everything's online.

586
00:26:01.840 --> 00:26:02.890
Want. Want

587
00:26:02.890 --> 00:26:04.790
>> somebody will try to call me on key base or something,

588
00:26:04.790 --> 00:26:07.470
>> but shell phone

589
00:26:07.480 --> 00:26:09.970
just you know

590
00:26:09.980 --> 00:26:12.490
anything? Let's not get into song here.

591
00:26:12.500 --> 00:26:15.000
Uh, yeah. No. So thank you. All

592
00:26:15.000 --> 00:26:17.550
listeners who joined us today. We really

593
00:26:17.550 --> 00:26:20.330
enjoyed having Taylor on the show. Thank you again,

594
00:26:20.330 --> 00:26:20.770
man.

595
00:26:21.640 --> 00:26:24.450
>> Yeah, thanks for hosting. And, uh, you know,

596
00:26:24.450 --> 00:26:27.350
hopefully my another one of my resolutions here in

597
00:26:27.350 --> 00:26:29.690
2021 is to actually record one of these

598
00:26:29.690 --> 00:26:32.670
podcasts every week. We did pretty good toward the end of the

599
00:26:32.670 --> 00:26:35.660
year last year on, we did pretty good when we started, but there have

600
00:26:35.660 --> 00:26:38.480
been some big sabbaticals in between. So

601
00:26:38.480 --> 00:26:39.630
this year, hopefully we'll do better.

602
00:26:39.640 --> 00:26:42.540
>> Hopefully, this year will be consistent because, um,

603
00:26:42.550 --> 00:26:45.550
you know, our sponsor ITProTV is allowing

604
00:26:45.550 --> 00:26:48.430
us to do this. And so we wanna thank them. Um, they also

605
00:26:48.430 --> 00:26:51.130
want to thank you for listening. So if you're interested in

606
00:26:51.140 --> 00:26:54.040
ITProTV the learning platform for IT

607
00:26:54.040 --> 00:26:55.960
professionals, I encourage you to goto

608
00:26:55.970 --> 00:26:58.970
itpro.tv and see what we have to offer.

609
00:26:59.040 --> 00:27:02.010
And if you're interested in a subscription, uh, there is a

610
00:27:02.020 --> 00:27:04.950
promo code available to you. It is Haskell Weekly

611
00:27:04.960 --> 00:27:07.760
30 that you can put in at

612
00:27:07.760 --> 00:27:10.340
check out, and that will apply 30% off the

613
00:27:10.340 --> 00:27:13.050
lifetime of your subscription, so we would definitely

614
00:27:13.050 --> 00:27:15.950
encourage you to check it out. And we really appreciate you being on

615
00:27:15.950 --> 00:27:18.840
today. I think that's all I've got anything else to

616
00:27:18.840 --> 00:27:19.460
add? Taylor?

617
00:27:20.340 --> 00:27:23.340
>> Uh, that is it. Happy hacking, Have a

618
00:27:23.340 --> 00:27:25.450
good year and adios

619
00:27:25.840 --> 00:27:26.560
>> Peace.
